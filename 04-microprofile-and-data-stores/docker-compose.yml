version: "3.8"

services:

  postgres:
    image: postgres:15.0
    container_name: dev-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=pass
    volumes:
      - ${HOME}/postgres-data/:/var/lib/postgresql/data:Z

  mongodb:
    image: mongo:6.0.2
    container_name: dev-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - ${HOME}/mongo-data:/data/db/:Z

  prometheus:
    image: prom/prometheus:v2.39.1
    container_name: prometheus
    command: "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:Z
    network_mode: host

  grafana:
    image: grafana/grafana:9.1.8
    container_name: grafana
    network_mode: host

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:1.38.1
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
  # Collector
  otel-collector:
    image: otel/opentelemetry-collector:0.62.1
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:Z
    ports:
      - "13133:13133" # Health_check extension
      - "4317:4317"   # OTLP gRPC receiver
    depends_on:
      - jaeger-all-in-one

#  # my service
#  panache-postgres:
#    build:
#      context: ./panache-postgres
#      dockerfile: src/main/docker/Dockerfile.jvm
#    container_name: panache-postgres
#    depends_on:
#      - postgres
#    ports:
#      - "8080:8080"
